import { FetchBaseQueryError } from "@reduxjs/toolkit/query/react";
import { GetQuickQuoteArgs, PreviewTradeResult } from "./types";
export declare const quickRouteApi: import("@reduxjs/toolkit/query/react").Api<import("@reduxjs/toolkit/query/react").BaseQueryFn<string | import("@reduxjs/toolkit/query/react").FetchArgs, unknown, FetchBaseQueryError, {}, import("@reduxjs/toolkit/query/react").FetchBaseQueryMeta>, {
    getQuickRoute: import("@reduxjs/toolkit/query/react").QueryDefinition<GetQuickQuoteArgs, import("@reduxjs/toolkit/query/react").BaseQueryFn<string | import("@reduxjs/toolkit/query/react").FetchArgs, unknown, FetchBaseQueryError, {}, import("@reduxjs/toolkit/query/react").FetchBaseQueryMeta>, never, PreviewTradeResult, "quickRouteApi">;
}, "quickRouteApi", never, typeof import("@reduxjs/toolkit/dist/query/core/module").coreModuleName | typeof import("@reduxjs/toolkit/dist/query/react/module").reactHooksModuleName>;
export declare const useGetQuickRouteQuery: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQuery<import("@reduxjs/toolkit/query/react").QueryDefinition<GetQuickQuoteArgs, import("@reduxjs/toolkit/query/react").BaseQueryFn<string | import("@reduxjs/toolkit/query/react").FetchArgs, unknown, FetchBaseQueryError, {}, import("@reduxjs/toolkit/query/react").FetchBaseQueryMeta>, never, PreviewTradeResult, "quickRouteApi">>;
export declare const useGetQuickRouteQueryState: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQueryState<import("@reduxjs/toolkit/query/react").QueryDefinition<GetQuickQuoteArgs, import("@reduxjs/toolkit/query/react").BaseQueryFn<string | import("@reduxjs/toolkit/query/react").FetchArgs, unknown, FetchBaseQueryError, {}, import("@reduxjs/toolkit/query/react").FetchBaseQueryMeta>, never, PreviewTradeResult, "quickRouteApi">>;
